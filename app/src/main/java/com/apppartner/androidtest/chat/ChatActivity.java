package com.apppartner.androidtest.chat;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v7.app.ActionBar;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.MenuItem;

import com.apppartner.androidtest.bus.BusProvider;
import com.apppartner.androidtest.Communicator;
import com.apppartner.androidtest.server.ErrorResponse;
import com.apppartner.androidtest.R;
import com.apppartner.androidtest.server.ServerEvent;
import com.apppartner.androidtest.api.ChatLogMessageModel;
import com.apppartner.androidtest.api.Data;
import com.squareup.otto.Subscribe;

import java.util.ArrayList;

import static com.apppartner.androidtest.R.id.recyclerView;

/**
 * GET request method is passed to Communicator instance. Handler methods receive data generated by
 * asynchronous request and create array list, which is passed to the adapter.
 */
public class ChatActivity extends AppCompatActivity {
    //==============================================================================================
    // Class Properties
    //==============================================================================================

    private RecyclerView mRecyclerView;
    private ChatAdapter mChatAdapter;
    private static ArrayList<Data> mMessageArrayList;
    private ChatLogMessageModel mChatLogMessageModel;
    private ArrayList<Data> mChatLog;
    private ArrayList<Data> mData;
    private Data mChatItem;

    private static final String TAG ="ChatActivity";

    //==============================================================================================
    // Static Class Methods
    //==============================================================================================

    public static void start(Context context) {
        Intent starter = new Intent(context, ChatActivity.class);
        context.startActivity(starter);
    }

    //==============================================================================================
    // Lifecycle Methods
    //==============================================================================================

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_chat);
        setTitle(getString(R.string.chat_title));
        mRecyclerView = (RecyclerView) findViewById(recyclerView);
        ActionBar actionBar = getSupportActionBar();
        assert actionBar != null;
        actionBar.setDisplayHomeAsUpEnabled(true);
        actionBar.setDisplayShowHomeEnabled(true);
        mRecyclerView.setHasFixedSize(true);
        mRecyclerView.setLayoutManager(new LinearLayoutManager(getApplicationContext(),
                LinearLayoutManager.VERTICAL,
                false));
        mChatAdapter = new ChatAdapter(this);

        Communicator communicator = new Communicator("GET");
        communicator.executeRequest();

    }

    @Override
    protected void onResume() {
        super.onResume();
        BusProvider.getInstance().register(this);
    }

    @Override
    protected void onPause() {
        super.onPause();
        BusProvider.getInstance().unregister(this);
    }

    @Subscribe
    public void onServerEvent(ServerEvent serverEvent) {
        mChatLogMessageModel = serverEvent.getChatLogMessageModel();
        mChatLog = new ArrayList<>();
        mData = new ArrayList<>();
        try {
            mData = mChatLogMessageModel.getData();

            for (int i = 0; i < mData.size(); i++ ) {
                String avatarUrl = mData.get(i).getAvatarUrl();
                String message = mData.get(i).getMessage();

                mChatItem = new Data();
                mChatItem.setAvatarUrl(avatarUrl);
                mChatItem.setMessage(message);
                mChatLog.add(mChatItem);

                Log.e(TAG, avatarUrl + ": " + message);
            }
            setAdapter(mChatLog);

        } catch(Exception e) {
            e.printStackTrace();
        }

    }

    @Subscribe
    public void onErrorEvent(ErrorResponse errorResponse) {
        String errorMessage = errorResponse.getErrorMessage();
        Log.e("ChatActivity", errorMessage);
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case android.R.id.home:
                onBackPressed();
                return true;
        }
        return false;
    }

    public void setAdapter(ArrayList<Data> chatLog){
        mMessageArrayList = chatLog;
        mChatAdapter.setChatLogMessageModelList(mMessageArrayList);
        mChatAdapter.notifyDataSetChanged();
        mRecyclerView.setAdapter(mChatAdapter);
    }
}